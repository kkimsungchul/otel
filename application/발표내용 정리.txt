
https://youtu.be/EZmUxMtx5Fc?si=eLSLaShEMqekyrEy
※ 참고사항 해당영상은 2022년도 자료이며, 현재와는 다른내용이 있을 수 있음

# why

- 5:50
옵저버빌리티 (관측성, 관찰 가능성) 
시스템 혹은 애플리케이션이 어떤 데이터 값을 출력하면 
그 값을 가지고 시스템을 이해하는것
예를 들면
장애가 왜 발생했지?
왜 느려졌지?
사용자가 느끼는 속도는 빠를까?
라는 근본적인 원인을 찾는 것을 말함

모니터링과 옵저버빌리티의 차이점
모니터링은 애플리케이션에서 출력하는 값을 수집하고 확인하는 활동
옵저버빌리티는 이 모니터링 활동을 통해서 어떤 값을 가지고 근본적인 원인을 찾아가는 디버깅이 섞여있는 활동

옵저버리리티를 확보하기위해선 로그,지표,추적이 필요함
로그(log) : 로그는 시간기반 텍스트
지표(metric) : 런타임 환경에서 측정된 값
추적(trace) : 어떤 요청이 처리될 때 경로(큰그림)

로그는 시스템마다, 개발자마다 로그 규격이 다름
옵저버빌리티를 확보하는 측면에서는 구조화된 로그를 남기는 것을 권장함
구조화된 로그는, 쉽게말해 제이슨이나 프로퍼티파일에서 남기는 key:value 형태

지표는 런타임 환경에서 측정된 서비스값
대표적으로 호스트 관련 성능 지표
성능지표를 토대로 스케일아웃 또는 스케일업을 할때 기준 데이터를 정함

추적은 어떤 요청이 있을 때 어떤 시스템으로 흘러가는지, 
흘러갈때마다 시간이 얼마나 흘러가는지, 어떤 경로를 가지고 있는지 확인

옵저버빌리티 측면에서 가장 중요한건 트레이스임
성능 관련 문제가 발생했을 때 트레이스 없이는 분석하기가 힘듬

어떤 요청이 10초 걸린다고 예를 잡았을때
해당 요청에는 무수히 많은 시스템을 거처감
이럴때 로그에 어떤 요청인지, 누가요청했는지, 시간이 얼마나 걸리는지 남기면 찾을수 있음
하지만 이방법은 하나의 시스템 내에서는 쉽게 파악이 가능하지만
MSA 환경에서는 여러개의 컴포넌트들을 다 분석해야 할때는 현실적으로 어려움

- 10:50
트레이스는 추적이라고 하며, 분산추적을 의미함
트레이스는 여러개의 span으로 이뤄짐
스팬은 프로세스 처리과정 또는 그 안에서의 세부 과정을 말함
스팬에는 시작시간, 종료시간이 포함되며
트리구조다 보니 상위정보를 포함하고 있음

첫번째 스팬은 루트스팬이라고 부르며
첫번째 스팬의 소요시간을 확인하며 어떻게 돌아가는지 알수 있음

트레이스는 비동기 처리에서 더욱 빛을 발함
비동기 추적을 할때 어려움이 있음
자세한 경로를 기록하므로 개발자 혹은 운영자에게 시스템이 어떻게 돌아가는지 이해할수 있는 큰 그림을 제시해줌

-12:40
오픈텔레메트리는 간단하게 오텔이라불리며
옵저버릴리티를 도와주는 일종의 프레임워크
업계의 표준으로 자리잡고 있음
그라파나,예거,프로메테우스, 데이타독,와탭에서 오픈텔레메트리를 지원해주고있음

-13:10
오픈텔레메트리 컨셉

오픈텔레메트리는 원격 측정 데이터에 대해서
계측 수집부터 각종 API SDK등 다양한 도구를 제공하는 것을 목표로 삼고 있음
호환성 높은 모니터링 플랫폼 개발이 가능함

# how
다른 시스템 혹은 애플리케이션을 모니터링해야 하므로 고가용성
수많은 시스템을 모니터링 할 수 있는 능력이 필요함


17:35
모니터링플랫폼은 모니터링 어떻게?
오픈텔레메트리 콜렉터로 수집하여 관리
리시버 - 프로세스 - 익스포터

리시버 영역에서는 예거나 프로메테우스등의 각종 데이터 소스들로부터 데이터를 수신하거나 데이터를 직접 생성
생성된 데이터는 프로세스 라인을 거쳐서 
익스포터를 통해 원하는 백엔드로 전송함

공식문서, 깃허브 참고

18:30
콜렉터를 어떻게 배치하느냐에 따라서 Agent모드와 Gateway 모드로 불림
Agent모드는 애플리케이션과 동일한 호스트에서 실행
애플리케이션과 같은 레벨에서 실행

Gateway모드는 데이터 센터 또는 리전에서 독립적으로 실행, 같은 환경 내에 Agent로부터 데이터 수신
게이트웨이는 서비스 형태로 배포되는것을 말함

한 시스템 내에 6개의 서비스가 있다고 가정함
아래의 그림은 Agent 콜렉터가 없이 Gateway콜렉터만 존재함
------------------------------------------------------------
시스템 A ,시스템 B	|				|	예거			|
시스템 C ,시스템 D	| Gateway 콜렉터	|	프로메테우스	|	그라파나
시스템 E ,시스템 F	|				|	로키			|
------------------------------------------------------------
이 경우에 Gateway 콜렉터의 정보가 변경될 경우 A B C D E ...의 모든 시스템에서 정보를 변경해줘야함

여기에 Agent콜렉터를 애플케이션 레벨에 하나 추가하게되면 아래와 같은 형태로 변경되며
-----------------------------------------------------------------------
시스템 A ,시스템 B				|				|	예거			|
시스템 C ,시스템 D	Agent 콜렉터	| Gateway 콜렉터	|	프로메테우스	|	그라파나
시스템 E ,시스템 F				|				|	로키			|
-----------------------------------------------------------------------
시스템들에서 설정을 바꿀 필요없이 Agent 콜렉터에서만 Gateway콜렉터의 정보를 변경하면됨
어떻게 구성 하느냐에 따라서 콜렉터를 여러개 둘수가 있으며,
Gateway콜렉터를 여러개 구성하여 수신하는 항목을 각각 나눌수도 있음
Gateway콜렉터(metric)
Gateway콜렉터(span)
Gateway콜렉터(log)

30분부터 봐야함

# next